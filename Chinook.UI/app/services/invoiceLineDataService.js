//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Generated by Merlin Version: 1.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
(function () {
    'use strict';

    var serviceId = 'invoiceLineDataService';
    angular.module('app').service(serviceId, ['$http', invoiceLineDataService]);

    function invoiceLineDataService($http) {
        var urlBase = '/api/invoiceLines';

        this.getData = function () {
            return $http.get(urlBase + '/all');
        };

        this.updateInvoiceLine = function (invoiceLine) {
            return $http.put(urlBase, invoiceLine);
        };

        this.insertInvoiceLine = function (invoiceLine) {
            return $http.post(urlBase, invoiceLine);
        };

        this.deleteInvoiceLine = function (invoiceLineId) {
            return $http.Delete(urlBase, invoiceLineId);
        };

        this.getDataPageable = function (sortExpression, page, pageSize) {
            return $http({
                url: urlBase,
                method: 'GET',
                params: {
                    sortExpression: sortExpression || '',
                    page: page || '',
                    pageSize: pageSize || ''
                }
            });
        };

        this.getDataByInvoiceLineId = function (invoiceLineId) {
            return $http.get(urlBase + '/all');
        };

        this.getDataByInvoiceId = function (invoiceId) {
            return $http.get('/api/invoices/' + invoiceId + '/invoiceLines/all');
        };

        this.getDataByInvoiceIdPageable = function (invoiceId, sortExpression, page, pageSize) {
            return $http({
                url: '/api/invoices/' + invoiceId + '/invoiceLines',
                method: 'GET',
                params: {
                    invoiceId: invoiceId || '',
                    sortExpression: sortExpression || '',
                    page: page || '',
                    pageSize: pageSize || ''
                }
            });
        };

        this.getDataByTrackId = function (trackId) {
            return $http.get('/api/tracks/' + trackId + '/invoiceLines/all');
        };

        this.getDataByTrackIdPageable = function (trackId, sortExpression, page, pageSize) {
            return $http({
                url: '/api/tracks/' + trackId + '/invoiceLines',
                method: 'GET',
                params: {
                    trackId: trackId || '',
                    sortExpression: sortExpression || '',
                    page: page || '',
                    pageSize: pageSize || ''
                }
            });
        };


    }
})();
