'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Generated by Merlin Version: 1.0.0.0
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------
Imports System
Imports System.Data
Imports System.Data.Common
Imports System.Data.SqlClient
Imports Chinook.Data.DbCommandProvider

Namespace Chinook.Data.SqlDbCommandProvider


    Public Class SqlDbAlbumCommandProvider
        Implements IDbAlbumCommandProvider

        ReadOnly _dbConnHolder As DbConnectionHolder

        Public Sub New()
            _dbConnHolder = New DbConnectionHolder(DbConnectionName)
        End Sub

        Public ReadOnly Property DbConnectionName() As String Implements IDbAlbumCommandProvider.DbConnectionName
            Get
                Return "ChinookConnection"
            End Get
        End Property

        Public ReadOnly Property AlbumDbConnectionHolder() As DbConnectionHolder Implements IDbAlbumCommandProvider.AlbumDbConnectionHolder
            Get
                Return _dbConnHolder
            End Get
        End Property


        ''' <summary>
        ''' Selects one or more records from the Album table 
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataDbCommand() As IDbCommand Implements IDbAlbumCommandProvider.GetGetDataDbCommand


            Dim command As New SqlCommand("Album_Select")
            command.CommandType = CommandType.StoredProcedure

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        ''' Updates one or more records from the Album table 
        ''' </summary>
        ''' <param name="albumId" />
        ''' <param name="title" />
        ''' <param name="artistId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetUpdateDbCommand(ByVal albumId As Int32, ByVal title As String, ByVal artistId As Int32) As IDbCommand Implements IDbAlbumCommandProvider.GetUpdateDbCommand


            Dim command As New SqlCommand("Album_Update")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@AlbumId", SqlDbType.Int, albumId))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@Title", SqlDbType.NVarChar, title))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ArtistId", SqlDbType.Int, artistId))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        ''' Inserts a record into the Album table on the database.
        ''' </summary>
        ''' <param name="albumId" />
        ''' <param name="title" />
        ''' <param name="artistId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetInsertDbCommand(ByVal albumId As Int32, ByVal title As String, ByVal artistId As Int32) As IDbCommand Implements IDbAlbumCommandProvider.GetInsertDbCommand


            Dim command As New SqlCommand("Album_Insert")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@AlbumId", SqlDbType.Int, albumId))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@Title", SqlDbType.NVarChar, title))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ArtistId", SqlDbType.Int, artistId))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        ''' Deletes one or more records from the Album table 
        ''' </summary>
        ''' <param name="albumId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetDeleteDbCommand(ByVal albumId As Int32) As IDbCommand Implements IDbAlbumCommandProvider.GetDeleteDbCommand


            Dim command As New SqlCommand("Album_Delete")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@AlbumId", SqlDbType.Int, albumId))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        ''' Function GetPageable returns a IDataReader populated with a subset of data from Album
        ''' </summary>
        ''' <param name="sortExpression" />
        ''' <param name="startRowIndex" />
        ''' <param name="maximumRows" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetPageableDbCommand(ByVal sortExpression As String, ByVal startRowIndex As Int32, ByVal maximumRows As Int32) As IDbCommand Implements IDbAlbumCommandProvider.GetGetPageableDbCommand


            Dim command As New SqlCommand("Album_GetPageable")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@sortExpression", SqlDbType.VarChar, sortExpression))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@startRowIndex", SqlDbType.Int, startRowIndex))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@MaximumRows", SqlDbType.Int, maximumRows))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        ''' Function GetRowCount returns the row count for Album
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetRowCountDbCommand() As IDbCommand Implements IDbAlbumCommandProvider.GetGetRowCountDbCommand


            Dim command As New SqlCommand("Album_GetRowCount")
            command.CommandType = CommandType.StoredProcedure

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        ''' Function GetDataByAlbumId returns a IDataReader for Album
        ''' </summary>
        ''' <param name="albumId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByAlbumIdDbCommand(ByVal albumId As Int32) As IDbCommand Implements IDbAlbumCommandProvider.GetGetDataByAlbumIdDbCommand


            Dim command As New SqlCommand("Album_GetDataByAlbumId")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@AlbumId", SqlDbType.Int, albumId))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        ''' Function GetDataByArtistId returns a IDataReader for Album
        ''' </summary>
        ''' <param name="artistId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByArtistIdDbCommand(ByVal artistId As Int32) As IDbCommand Implements IDbAlbumCommandProvider.GetGetDataByArtistIdDbCommand


            Dim command As New SqlCommand("Album_GetDataByArtistId")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ArtistId", SqlDbType.Int, artistId))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        ''' Function GetPageable returns a IDataReader populated with a subset of data from Album
        ''' </summary>
        ''' <param name="sortExpression" />
        ''' <param name="startRowIndex" />
        ''' <param name="maximumRows" />
        ''' <param name="artistId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByArtistIdPageableDbCommand(ByVal sortExpression As String, ByVal startRowIndex As Int32, ByVal maximumRows As Int32, ByVal artistId As Int32) As IDbCommand Implements IDbAlbumCommandProvider.GetGetDataByArtistIdPageableDbCommand


            Dim command As New SqlCommand("Album_GetDataByArtistIdPageable")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@sortExpression", SqlDbType.VarChar, sortExpression))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@startRowIndex", SqlDbType.Int, startRowIndex))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@MaximumRows", SqlDbType.Int, maximumRows))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ArtistId", SqlDbType.Int, artistId))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        ''' Function GetRowCount returns the row count for Album
        ''' </summary>
        ''' <param name="artistId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByArtistIdRowCountDbCommand(ByVal artistId As Int32) As IDbCommand Implements IDbAlbumCommandProvider.GetGetDataByArtistIdRowCountDbCommand


            Dim command As New SqlCommand("Album_GetDataByArtistIdRowCount")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ArtistId", SqlDbType.Int, artistId))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


    End Class
End Namespace
